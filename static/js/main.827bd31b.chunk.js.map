{"version":3,"sources":["components/Cards/Cards.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Cards","props","react_default","a","createElement","className","alt","name","src","image","onClick","clickHandler","id","Wrapper","children","Header","message","score","highScore","App","state","characters","_this","find","character","i","clicked","setState","forEach","sort","Math","random","gameOver","_this2","this","components_Wrapper_Wrapper","components_Header_Header","map","components_Cards_Cards","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+lDAWeA,SARD,SAAAC,GAAK,OACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,MAAQC,QAAS,kBAAMT,EAAMU,aAAaV,EAAMW,WCDxEC,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCS1CC,SATA,SAAAd,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,IAAyBJ,EAAMe,SAC/Bd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMgB,MADhB,iBACqChB,EAAMiB,qBCsEhCC,oNApEXC,MAAQ,CACJC,aACAL,QAAS,4DACTC,MAAO,EACPC,UAAW,KAGfP,aAAe,SAAAC,GAEXU,EAAKF,MAAMC,WAAWE,KAAK,SAACC,EAAWC,GACnC,GAAID,EAAUZ,KAAOA,EAAI,CAErB,IAA6B,IAA1BS,EAAWI,GAAGC,QAeb,OAdAL,EAAWI,GAAGC,SAAU,EAExBJ,EAAKK,SAAS,CAACV,MAAQK,EAAKF,MAAMH,MAAQ,EAAGD,QAAS,2BAGnDM,EAAKF,MAAMH,OAAS,KAErBK,EAAKF,MAAMC,WAAWO,QAAQ,SAAAJ,GAC5BA,EAAUE,SAAU,IAEtBJ,EAAKK,SAAS,CAACV,MAAO,EAAGD,QAAS,wCAAyCE,UAAW,MAGxFI,EAAKF,MAAMC,WAAWQ,KAAK,kBAAMC,KAAKC,SAAW,MAC1C,EAEXT,EAAKU,WAGT,OAAO,OAIfA,SAAW,WAEHV,EAAKF,MAAMH,MAAQK,EAAKF,MAAMF,WAChCI,EAAKK,SAAS,CAACT,UAAWI,EAAKF,MAAMH,QAGvCK,EAAKF,MAAMC,WAAWO,QAAQ,SAAAJ,GAC5BA,EAAUE,SAAU,IAEtBJ,EAAKK,SAAS,CAACV,MAAO,EAAGD,QAAS,qHAG7B,IAAAiB,EAAAC,KACP,OACEhC,EAAAC,EAAAC,cAAC+B,EAAD,KACIjC,EAAAC,EAAAC,cAACgC,EAAD,CAAQnB,MAAOiB,KAAKd,MAAMH,MAAOC,UAAWgB,KAAKd,MAAMF,UAAWF,QAASkB,KAAKd,MAAMJ,UACtFd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAChB6B,KAAKd,MAAMC,WAAWgB,IAAI,SAAAb,GAAS,OAClCtB,EAAAC,EAAAC,cAACkC,EAAD,CACE3B,aAAcsB,EAAKtB,aACnBC,GAAIY,EAAUZ,GACd2B,IAAKf,EAAUZ,GACfL,KAAMiB,EAAUjB,KAChBE,MAAOe,EAAUf,UAGrBP,EAAAC,EAAAC,cAAA,kDAhEQoC,cCHlBC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.827bd31b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Cards.css\";\n\nconst Cards = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image}  onClick={() => props.clickHandler(props.id)}/>\n    </div>\n  </div>\n);\n\nexport default Cards;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = props => (\n  <div className=\"header\">\n    <div className=\"title\"> {props.message}</div>\n    <div className=\"scores\">\n      Score: {props.score} | Highscore: {props.highScore} \n    </div>\n  </div>\n);\n\nexport default Header;","import React, { Component } from \"react\";\nimport Cards from \"./components/Cards\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n\n    state = {\n        characters,\n        message: \"Click an image to begin. Dont click the same image twice!\",\n        score: 0,\n        highScore: 0\n    };\n    \n    clickHandler = id => {\n        //searches array for id that matches\n        this.state.characters.find((character, i) => {\n            if (character.id === id) {\n                //checks clicked and toggles true\n                if(characters[i].clicked === false) {\n                    characters[i].clicked = true;\n                    //adds to score and update message\n                    this.setState({score : this.state.score + 1, message: \"Good job, Keep it up!!\"});\n\n                    //checks if user wins\n                    if(this.state.score >= 11) {\n                       //resets each character.clicked to false\n                      this.state.characters.forEach(character => {\n                        character.clicked = false;\n                      });\n                      this.setState({score: 0, message: \"You won! You must be a Xenogears fan!\", highScore: 12});\n                    }\n                    //shuffles characters\n                    this.state.characters.sort(() => Math.random() - 0.5);\n                    return true; \n                } else {\n                this.gameOver();\n                }\n            }\n            return false;\n        });\n    }\n\n    gameOver = () => {\n        //checks to set new highscore\n        if (this.state.score > this.state.highScore) {\n          this.setState({highScore: this.state.score});\n        }\n        //resets each character.clicked to false\n        this.state.characters.forEach(character => {\n          character.clicked = false;\n        });\n        this.setState({score: 0, message: \"Game Over! Click an image to try again.\"});\n      }\n\n    render() {\n      return (\n        <Wrapper>\n            <Header score={this.state.score} highScore={this.state.highScore} message={this.state.message}></Header>\n            <div className=\"logo\"></div>\n          {this.state.characters.map(character => (\n            <Cards\n              clickHandler={this.clickHandler}\n              id={character.id}\n              key={character.id}\n              name={character.name}\n              image={character.image}\n            />\n          ))}\n          <footer>Xenogears React Fan Game</footer>\n        </Wrapper>\n      );\n    }\n  }\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}